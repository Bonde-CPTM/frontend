{"version":3,"sources":["hooks/storage-service/types/EnumStorageKeys.ts","hooks/tolen-service/TokenService.ts","hooks/error-handler/ErrorHandler.ts","hooks/storage-service/StorageService.ts","hooks/tolen-service/index.ts","themes/ThemeDefault.ts","components/routers/route-default/RouteDefault.tsx","components/routers/main-router/MainRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EnumStorageKey","useTokenService","useStorageService","getItem","setItem","handleError","useCallback","e","response","data","console","log","getToken","token","accessToken","undefined","Error","setToken","value","key","window","localStorage","theme","createTheme","palette","primary","main","contrastText","secondary","error","dark","light","typography","components","MuiOutlinedInput","styleOverrides","root","paddingRight","background","ThemeDefault","responsiveFontSizes","RouteDefault","props","history","useHistory","useEffect","visibility","push","path","exact","component","LazyLoginPage","lazy","LazySignupPage","LazyAdmNewEventPage","LazyAdmEventEditPage","LazyAdmEventListPage","LazyMainPage","LazyEventPage","MainRouter","fallback","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f43226df.chunk.js","sourcesContent":["export enum EnumStorageKey {\r\n    accessToken = 'ACCESS_TOKEN',\r\n    idCliente = 'ID_CLIENTE'\r\n}","import { useErrorHandler } from \"hooks/error-handler\"\r\nimport { useStorageService } from \"hooks/storage-service\"\r\nimport { EnumStorageKey } from \"hooks/storage-service/types/EnumStorageKeys\"\r\nimport { useCallback } from \"react\"\r\n\r\nexport const useTokenService = () => {\r\n    const { getItem, setItem } = useStorageService()\r\n    const { handleError } = useErrorHandler()\r\n    const getToken = useCallback((): string | null => {\r\n        try {\r\n            const token = getItem(EnumStorageKey.accessToken)\r\n            if (token !== undefined && token !== null) {\r\n                return token\r\n            } else {\r\n                throw new Error('Token invÃ¡lido')\r\n            }\r\n        } catch (e) {\r\n             handleError(e)\r\n             return null\r\n        }\r\n    }, [getItem, handleError])\r\n\r\n    const setToken = useCallback((value: string): void=>{\r\n        setItem(EnumStorageKey.accessToken, value)\r\n    }, [setItem])\r\n\r\n    return {\r\n        getToken,\r\n        setToken\r\n    }\r\n}\r\n","import { useCallback } from \"react\"\r\n\r\nexport const useErrorHandler = () => {\r\n    const handleError = useCallback((e: any)=>{\r\n        if(e){\r\n            if(e.response){\r\n                if(e.response.data){\r\n                    console.log(e.response.data)\r\n                } else {\r\n                    console.log(e)\r\n                }\r\n            } else {\r\n                console.log(e)\r\n            }\r\n        } else{\r\n            console.log(e)\r\n        }\r\n    }, [])\r\n    return{\r\n        handleError\r\n    }\r\n}\r\n","import { useCallback } from \"react\"\r\nimport { EnumStorageKey } from \"./types/EnumStorageKeys\"\r\n\r\nexport const useStorageService = () => {\r\n    const getItem = useCallback((key: EnumStorageKey): string | null | undefined => {\r\n        try {\r\n            const value = window.localStorage.getItem(key)\r\n            return value\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }, [])\r\n\r\n    const setItem = useCallback((key: EnumStorageKey, value: string): boolean => {\r\n        try {\r\n            window.localStorage.setItem(key, value)\r\n            return true\r\n        } catch (e) {\r\n            console.log(e)\r\n            return false\r\n        }\r\n    }, [])\r\n    return ({\r\n        getItem,\r\n        setItem\r\n    })\r\n}\r\n","export { useTokenService } from './TokenService'","import { createTheme, responsiveFontSizes } from '@mui/material/styles';\r\n\r\nlet theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#ee3338',\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      main: '#95abe0',\r\n      contrastText: '#fff'\r\n    },\r\n    error:{\r\n      main: '#d32f2f',\r\n      dark: '#c62828',\r\n      light: '#fd9191'\r\n    }\r\n  },\r\n  typography: {\r\n\r\n  },\r\n  components:{\r\n   MuiOutlinedInput:{\r\n     styleOverrides:{\r\n       root:{\r\n         paddingRight: 0,\r\n         background: '#fff',\r\n       },\r\n     }\r\n   }\r\n  }\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport const ThemeDefault = theme","import { useTokenService } from \"hooks/tolen-service\"\r\nimport { useEffect } from \"react\"\r\nimport { Route, useHistory } from \"react-router-dom\"\r\nimport { RouteDefaultProps } from \"./types/RouteDefaultProps\"\r\n\r\nexport const RouteDefault = (props: RouteDefaultProps) => {\r\n    const { getToken } = useTokenService()\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        const token = getToken()\r\n        console.log(token)\r\n        if(token){\r\n            if(props.visibility === 'not-auth'){\r\n                history.push('/')\r\n            }   \r\n        } else {\r\n            if(props.visibility === 'auth'){\r\n                history.push('/login')\r\n            }\r\n        }\r\n    }, [getToken, props.visibility, history])\r\n    return (\r\n        <>\r\n            <Route\r\n                path={props.path}\r\n                exact={props.exact ? props.exact : false}>\r\n                {props.component}\r\n            </Route>\r\n        </>\r\n    )\r\n}\r\n","import { HashRouter as Router, Switch } from 'react-router-dom'\r\nimport { RouteDefault } from '../route-default'\r\nimport { lazy, Suspense } from 'react'\r\nimport { InputDefault } from 'components/inputs/input-default'\r\n\r\nconst LazyLoginPage = lazy(() => import('pages/not-auth/login-page'))\r\nconst LazySignupPage = lazy(() => import('pages/not-auth/signup-page'))\r\nconst LazyAdmNewEventPage = lazy(() => import('pages/auth/adm/event/new-event'))\r\nconst LazyAdmEventEditPage = lazy(() => import('pages/auth/adm/event/event-edit'))\r\nconst LazyAdmEventListPage = lazy(() => import('pages/auth/adm/event/event-list'))\r\nconst LazyMainPage = lazy(() => import('pages/auth/main-page'))\r\nconst LazyEventPage = lazy(() => import('pages/auth/event-page'))\r\n\r\n\r\nexport const MainRouter = () => {\r\n    \r\n    return (\r\n        <>\r\n            <Suspense fallback={<div>loading...</div>}>\r\n                <Router>\r\n                    <Switch>\r\n                        <RouteDefault exact path=\"/login\" visibility=\"not-auth\" component={(\r\n                            <LazyLoginPage />\r\n                        )} />\r\n                        <RouteDefault exact path=\"/signup/login\" visibility=\"not-auth\" component={(\r\n                            <LazySignupPage />\r\n                        )} />\r\n                         <RouteDefault exact path=\"/adm/event/new-event\" visibility=\"auth\" component={(\r\n                            <LazyAdmNewEventPage />\r\n                        )} />\r\n                        <RouteDefault exact path=\"/adm/event/:id\" visibility=\"auth\" component={(\r\n                            <LazyAdmEventEditPage />\r\n                        )} />\r\n                          <RouteDefault exact path=\"/adm/event\" visibility=\"auth\" component={(\r\n                            <LazyAdmEventListPage />\r\n                        )} />\r\n                          <RouteDefault exact path=\"/event\" visibility=\"auth\" component={(\r\n                            <LazyEventPage />\r\n                        )} />\r\n                        <RouteDefault exact path=\"/\" visibility=\"auth\"  component={(\r\n                            <LazyMainPage />\r\n                        )} />\r\n\r\n                    </Switch>\r\n                </Router>\r\n            </Suspense>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { ThemeDefault } from 'themes/ThemeDefault';\r\nimport { MainRouter } from './components/routers/main-router';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={ThemeDefault}>\r\n        <MainRouter />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}